module UseCaseModel.Parsers.XML.UseCaseParse
where 

import BasicTypes
import UseCaseModel.Parsers.XML.XmlUseCaseModel

import Text.XML.HXT.Arrow
import System.Environment

instance XmlPickler XmlPhone where 
         xpickle = xpPhone

instance XmlPickler XmlUseCaseModel where
	xpickle = xpUseCaseModel

xpPhone :: PU XmlPhone
xpPhone = 
        xpElem "phone" $
        xpWrap (XmlPhone, \ (XmlPhone ucms) -> (ucms) ) $ 
        xpList (xpUseCaseModel)

xpUseCaseModel :: PU XmlUseCaseModel
xpUseCaseModel =
	xpElem "feature" $ 
	xpWrap ( uncurry4 XmlUCM, \ (XmlUCM i n ucs aspect) -> (i, n, ucs, aspect) ) $
	xp4Tuple ( xpElem "featureId" xpText ) 
                 ( xpElem "name" xpText ) 
                 []
                 []
